{
    "swagger": "2.0",
    "info": {
        "description": "API del backend de log√≠stica.",
        "title": "Logistics API",
        "contact": {
            "name": "Equipo Backend",
            "email": "devs@example.com"
        },
        "version": "1.0"
    },
    "basePath": "/api",
    "paths": {
        "/addresses": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Clients see only their addresses (active by default). Admins can pass ?all=1 to see all, and ?include_inactive=1 to include inactive.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "List addresses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin only: if set to 1, list all users' addresses",
                        "name": "all",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Admin only: if set to 1, include inactive addresses",
                        "name": "include_inactive",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logistics-app_backend_internal_domain.Address"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates coordinates first if provided, then address; CustomerID is set from JWT. Clients create their own; admins can also create for themselves only in this endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Create address (with coordinates)",
                "parameters": [
                    {
                        "description": "Address with optional coordinates",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "city": {
                                    "type": "string"
                                },
                                "coordinates": {
                                    "type": "object",
                                    "properties": {
                                        "latitude": {
                                            "type": "number"
                                        },
                                        "longitude": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "country": {
                                    "type": "string"
                                },
                                "exterior_number": {
                                    "type": "string"
                                },
                                "interior_number": {
                                    "type": "string"
                                },
                                "neighborhood": {
                                    "type": "string"
                                },
                                "postal_code": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "street": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.Address"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/addresses/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get single address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Update address (and coordinates)",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Address update",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "city": {
                                    "type": "string"
                                },
                                "coordinates": {
                                    "type": "object",
                                    "properties": {
                                        "latitude": {
                                            "type": "number"
                                        },
                                        "longitude": {
                                            "type": "number"
                                        }
                                    }
                                },
                                "country": {
                                    "type": "string"
                                },
                                "exterior_number": {
                                    "type": "string"
                                },
                                "interior_number": {
                                    "type": "string"
                                },
                                "is_active": {
                                    "type": "boolean"
                                },
                                "neighborhood": {
                                    "type": "string"
                                },
                                "postal_code": {
                                    "type": "string"
                                },
                                "state": {
                                    "type": "string"
                                },
                                "street": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.Address"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes address only if it is not referenced by any order. Owner or admin only.",
                "tags": [
                    "addresses"
                ],
                "summary": "Delete address",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/addresses/{id}/active": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Set Address active status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Address ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Desired active state",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "active": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Authenticates user and returns JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login endpoint",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Not authorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Clients see only their orders. Admins can see all orders by passing ?all=1.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "List orders",
                "parameters": [
                    {
                        "type": "string",
                        "description": "If set to 1 and requester is admin, returns all orders; otherwise returns only own orders",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders with details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logistics-app_backend_internal_domain.OrderListItem"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new order for authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Create new order",
                "parameters": [
                    {
                        "description": "Order details",
                        "name": "order",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.Order"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created order",
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.Order"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns all available order status constants",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get available order statuses",
                "responses": {
                    "200": {
                        "description": "List of order statuses",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "label": {
                                        "type": "string"
                                    },
                                    "value": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns the detailed information of a specific order",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Get order detail by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order detail",
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.OrderDetail"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/orders/{id}/status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Updates the status of an order (admin only)",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "orders"
                ],
                "summary": "Update order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New status",
                        "name": "status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/package-types": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns package types. If ?all=1 and requester is admin, includes inactive; otherwise only active.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "package_types"
                ],
                "summary": "List package types",
                "parameters": [
                    {
                        "type": "string",
                        "description": "If set to 1 and requester is admin, returns active and inactive",
                        "name": "all",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/logistics-app_backend_internal_domain.PackageType"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/package-types/{id}/active": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Admin only. Sets is_active true/false for a PackageType",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "package_types"
                ],
                "summary": "Set PackageType active status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PackageType ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Desired active state",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "active": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "post": {
                "description": "Creates a new user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "email": {
                                    "type": "string"
                                },
                                "full_name": {
                                    "type": "string"
                                },
                                "password": {
                                    "type": "string"
                                },
                                "phone": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created user",
                        "schema": {
                            "$ref": "#/definitions/logistics-app_backend_internal_domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a user account (admin or own account only)",
                "tags": [
                    "users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "logistics-app_backend_internal_domain.Address": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "coordinate_id": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "integer"
                },
                "exterior_number": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "interior_number": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "neighborhood": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "logistics-app_backend_internal_domain.Order": {
            "type": "object",
            "properties": {
                "actual_weight_kg": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "integer"
                },
                "customer_id": {
                    "type": "integer"
                },
                "destination_address_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "observations": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "origin_address_id": {
                    "type": "integer"
                },
                "package_type_id": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.OrderStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        },
        "logistics-app_backend_internal_domain.OrderDetail": {
            "type": "object",
            "properties": {
                "actual_weight_kg": {
                    "type": "number"
                },
                "ad_city": {
                    "type": "string"
                },
                "ad_exterior": {
                    "type": "string"
                },
                "ad_neighborhood": {
                    "type": "string"
                },
                "ad_postal": {
                    "type": "string"
                },
                "ad_street": {
                    "type": "string"
                },
                "ao_city": {
                    "type": "string"
                },
                "ao_exterior": {
                    "type": "string"
                },
                "ao_neighborhood": {
                    "type": "string"
                },
                "ao_postal": {
                    "type": "string"
                },
                "ao_street": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "destination_address_id": {
                    "type": "integer"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "internal_notes": {
                    "type": "string"
                },
                "observations": {
                    "type": "string"
                },
                "order_number": {
                    "type": "string"
                },
                "origin_address_id": {
                    "type": "integer"
                },
                "package_type_id": {
                    "type": "integer"
                },
                "size_code": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.PackageSize"
                },
                "status": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.OrderStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "logistics-app_backend_internal_domain.OrderListItem": {
            "type": "object",
            "properties": {
                "actual_weight_kg": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "destination_full_address": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "order_number": {
                    "type": "string"
                },
                "origin_full_address": {
                    "type": "string"
                },
                "size_code": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.PackageSize"
                },
                "status": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.OrderStatus"
                }
            }
        },
        "logistics-app_backend_internal_domain.OrderStatus": {
            "type": "string",
            "enum": [
                "created",
                "collected",
                "in_station",
                "in_route",
                "delivered",
                "cancelled"
            ],
            "x-enum-varnames": [
                "OrderCreated",
                "OrderCollected",
                "OrderInStation",
                "OrderInRoute",
                "OrderDelivered",
                "OrderCancelled"
            ]
        },
        "logistics-app_backend_internal_domain.PackageSize": {
            "type": "string",
            "enum": [
                "S",
                "M",
                "L",
                "XL"
            ],
            "x-enum-varnames": [
                "PackageS",
                "PackageM",
                "PackageL",
                "PackageXL"
            ]
        },
        "logistics-app_backend_internal_domain.PackageType": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "max_weight_kg": {
                    "type": "number"
                },
                "size_code": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.PackageSize"
                }
            }
        },
        "logistics-app_backend_internal_domain.Role": {
            "type": "string",
            "enum": [
                "client",
                "admin"
            ],
            "x-enum-varnames": [
                "RoleClient",
                "RoleAdmin"
            ]
        },
        "logistics-app_backend_internal_domain.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "default_address_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_active": {
                    "type": "boolean"
                },
                "phone": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/logistics-app_backend_internal_domain.Role"
                },
                "updated_at": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}